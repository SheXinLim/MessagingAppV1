<!-- 
Log in page
-->
{% extends 'base.jinja' %}

{% block content %} 
    <h1>Login</h1>
    <p>Username</p>
    <input id="username" type="text"/>
    <p>Password</p>
    <input id="password" type="password"/>
    <button onclick="login()">Login</button>

    <!-- Include Crypto-JS for hashing password client-side -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>

    <script>
        function isValidURL(string) {
            if (string.length === 0) {
                return false;
            }
            if (string[0] === "/") {
                return true;  // Allow relative URLs
            }
            try {
                new URL(string);
                return true;  // URL is well-formed
            } catch (_) {
                return false;  // Malformed URL
            }
        }

        async function login() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            // Hash the password using Crypto-JS SHA256
            const hashedPassword = CryptoJS.SHA256(password).toString();

            let loginURL = "{{ url_for('login_user') }}";
            try {
                let response = await axios.post(loginURL, {
                    username: username,
                    password: hashedPassword // Send the hashed password instead of the plaintext
                });

                // Check the structure of the response to see if it's a success message or an error
                if (response.data && response.data.redirect) {
                    // If there is a 'redirect' key in the response, navigate to that URL
                    window.location.href = response.data.redirect;
                } else if (response.data && response.data.error) {
                    // If there is an 'error' key, show the error message
                    alert(response.data.error);
                } else {
                    // If the response is unexpected, log it and show a default message
                    console.log('Unexpected response:', response.data);
                    alert("An unexpected error occurred.");
                }
            } catch (error) {
                // Handle errors that occur during the request
                console.error('Login error:', error);
                if (error.response && error.response.data) {
                    alert(error.response.data);
                } else {
                    alert('An unknown error occurred. Please try again.');
                }
            }
        }
    </script>

    <script>
        setTimeout(function() {
            alert('Session timed out. You will be redirected to the homepage.');
            window.location.href = '{{ url_for("index") }}'; // Redirect to the index page
        }, 180000); // 180000 milliseconds = 3 minutes
    </script>
{% endblock %}
